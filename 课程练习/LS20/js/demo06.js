// 2019/5/14

// 分组的 反向引用
// 如何将2017-10-23转成10/23/2017
"2017-10-23".replace(/(\d{4})-(\d{2})-(\d{2})/,"$2/$3/$1");

// 分组的 忽略分组（？：）
"2017-10-23".replace(/(?:\d{4})-(\d{2})-(\d{2})/,"$2/$3/$1");//"23/$3/10"

//注意括号的转义字符，第一个相当于做了分组
// $行尾匹配
console.log(/^(ab)$/.test("(ab)"));//false
console.log(/^\(ab\)$/.test("(ab)"));//true

// 了解
//正则前瞻,判断后边是否满足断言
// x(?=y)	匹配'x'仅仅当'x'后面跟着'y'.这种叫做先行断言。
// x(?!y) 	匹配'x'仅仅当'x'后面不跟着'y',这个叫做正向否定查找。
// \w 匹配字母
console.log("a23*4vv".replace(/\w(?=\d)/g,"X"));//XX3*4vv 正项前瞻
console.log("a23*4v8".replace(/\w(?=\d)/g,"X"));//XX3*4X8
console.log("a23*4v8".replace(/\w(?!\d)/g,"X"));//a2X*XvX 负项前瞻